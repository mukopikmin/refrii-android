apply plugin: 'com.android.application'
apply plugin: 'deploygate'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

deploygate {
    def hash = 'git rev-parse --short HEAD'.execute([], project.rootDir).in.text.trim()

    deployments {
        developmentRelease {
            def flavor = 'development'

            message = "${flavor} build ${hash}"
            sourceFile = file("${project.rootDir}/app/${flavor}/release/app-${flavor}-release.apk")
        }

        stagingRelease {
            def flavor = 'staging'

            message = "${flavor} build ${hash}"
            sourceFile = file("${project.rootDir}/app/${flavor}/release/app-${flavor}-release.apk")
        }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.refrii.client"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 19
        versionName "0.9.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"
    productFlavors {
        production {
            applicationId "com.refrii.client"
        }
        development {
            applicationId "com.refrii.client.development"
            versionNameSuffix "-dev"
        }
        staging {
            applicationId "com.refrii.client.staging"
            versionNameSuffix "-staging"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def daggerVer = '2.21'
    def powerMockVersion = '1.6.3'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-auth:16.2.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation "com.google.dagger:dagger:$daggerVer"
    implementation "com.google.dagger:dagger-android-support:$daggerVer"
    implementation 'com.google.errorprone:error_prone_annotations:2.3.3'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.5.0'
    implementation 'com.anupcowkur:reservoir:3.1.0'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'org.yaml:snakeyaml:1.24'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.google.firebase:firebase-messaging:17.6.0'

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
//    testImplementation 'org.mockito:mockito-android:2.22.0'

//    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
//    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
//    testImplementation("org.powermock:powermock-api-mockito:$powerMockVersion") {
//        exclude module: 'mockito-all'
//    }
//    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    kapt 'com.jakewharton:butterknife-compiler:8.5.1'
    kapt "com.google.dagger:dagger-android-processor:$daggerVer"
    kapt "com.google.dagger:dagger-compiler:$daggerVer"
}

kapt {
    generateStubs = true
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'
