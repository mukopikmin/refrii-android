apply plugin: 'com.android.application'
apply plugin: 'deploygate'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.android.application'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'com.google.firebase.crashlytics'

deploygate {
    def hash = 'git rev-parse --short HEAD'.execute([], project.rootDir).in.text.trim()

    deployments {
        productionRelease {
            def flavor = 'production'

            message = "${flavor} build ${hash}"
            sourceFile = file("${project.rootDir}/app/${flavor}/release/app-${flavor}-release.apk")
        }

        developmentRelease {
            def flavor = 'development'

            message = "${flavor} build ${hash}"
            sourceFile = file("${project.rootDir}/app/${flavor}/release/app-${flavor}-release.apk")
        }
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "app.muko.mypantry"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 41
        versionName "0.14.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"
                ]
            }
        }
    }

    flavorDimensions "default"
    productFlavors {
        production {
            applicationId "app.muko.mypantry"
        }
        development {
            applicationId "app.muko.mypantry.development"
            versionNameSuffix "-development"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            // Changes the directory where Gradle saves test reports. By default, Gradle saves test reports
            // in the path_to_your_project/module_name/build/outputs/reports/ directory.
            // '$rootDir' sets the path relative to the root directory of the current project.
            reportDir "$rootDir/test-reports"
            // Changes the directory where Gradle saves test results. By default, Gradle saves test results
            // in the path_to_your_project/module_name/build/outputs/test-results/ directory.
            // '$rootDir' sets the path relative to the root directory of the current project.
            resultsDir "$rootDir/test-results"
        }
    }
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    def dagger_version = '2.25.3'
    def room_version = "2.2.5"
    def retrofit_version = "2.7.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.errorprone:error_prone_annotations:2.3.4'
    implementation 'com.google.firebase:firebase-auth:20.0.1'
    implementation 'com.google.firebase:firebase-core:18.0.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.anupcowkur:reservoir:3.1.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    implementation 'com.jakewharton:butterknife:10.2.1'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'net.steamcrafted:materialiconlib:1.1.5'
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    testImplementation 'org.mockito:mockito-core:3.3.3'

    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
//    testImplementation 'junit:junit:4.12'
//    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
//    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
//    testImplementation 'org.mockito:mockito-inline:3.2.4'
//    testImplementation 'org.robolectric:robolectric:4.3'
//
////    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'

    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test.ext:truth:1.3.0'
    testImplementation 'com.google.truth:truth:1.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:robolectric:4.3'
//    testImplementation 'org.awaitility:awaitility-kotlin:4.0.2'


    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "androidx.room:room-compiler:$room_version"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}

kapt {
    correctErrorTypes = true
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.crashlytics'